{"version":3,"sources":["components/Dialogs/Dialogs.module.css","HOC/WithAuthRedirect.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/dialogsItem/DialogItem.tsx","components/Dialogs/SendMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","Message","message","DialogItem","id","activeClassName","classes","active","name","rSendMessageForm","reduxForm","form","onSubmit","handleSubmit","className","addMessage","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogItems","messagesPage","dialogsData","map","el","key","messageItems","messagesData","dialogs","dialogContent","messages","values","sendMessage","compose","action","addMessageCreator","WithAuthRedirect"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,cAAgB,+BAA+B,WAAa,8B,qGCK9NC,EAA6B,SAACC,GAAD,MAA0B,CACvDC,OAAQD,EAAME,KAAKD,SAkBRE,IAdiB,SAACC,GAAoC,IAC3DC,EAD0D,uKAGxD,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OAFK,kBAAC,IAAD,CAAWC,GAAI,eAHS,GAChCC,IAAML,WAOtC,OAAOM,YAAQX,EAARW,CAAoCL,K,uFCXhCM,EAHqB,SAACJ,GAAD,OAAW,6BAAMA,EAAMK,U,QCW5CC,EARwB,SAACN,GAAD,OACrC,6BACE,kBAAC,IAAD,CAASC,GAAE,mBAAcD,EAAMO,IAAMC,gBAAiBC,IAAQC,QAC3DV,EAAMW,Q,kCCiBEC,EAJUC,YAAyC,CAC9DC,KAAK,eADgBD,EAduE,SAAAb,GAE5F,OACI,0BAAMe,SAAUf,EAAMgB,aAAcC,UAAWR,IAAQS,YACnD,kBAACC,EAAA,EAAD,CAAOC,UAAYC,IAAUV,KAAM,UAC5BW,YAAa,kBACbC,SAAY,CAACC,OAEpB,4CCyBGC,EA5BqB,SAACzB,GAEnC,IAAI0B,EAAc1B,EAAM2B,aAAaC,YAAYC,KAAI,SAACC,GAAD,OACnD,kBAAC,EAAD,CAAYnB,KAAMmB,EAAGnB,KAAMJ,GAAIuB,EAAGvB,GAAIwB,IAAKD,EAAGvB,QAG5CyB,EAAehC,EAAM2B,aAAaM,aAAaJ,KAAI,SAACC,GAAD,OACrD,kBAAC,EAAD,CAASzB,QAASyB,EAAGzB,QAAS0B,IAAKD,EAAGvB,QASxC,OACE,yBAAKU,UAAWR,IAAQyB,SACtB,yBAAKjB,UAAWR,IAAQiB,aAAcA,GACtC,yBAAKT,UAAWR,IAAQ0B,eACtB,yBAAKlB,UAAWR,IAAQ2B,UAAWJ,GAEjC,kBAAC,EAAD,CAAiBjB,SAZP,SAACsB,GACfrC,EAAMsC,YAAYD,EAAOhC,e,wBCVhBkC,sBACXpC,aAPkB,SAACV,GACrB,MAAO,CACLkC,aAAclC,EAAMkC,gBAKI,CACtBW,YAAYE,IAAOC,oBAErBC,IAJWH,CAKbd","file":"static/js/4.70c84f9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1fTOe\",\"dialogItems\":\"Dialogs_dialogItems__3sSCT\",\"active\":\"Dialogs_active__2r2kp\",\"messages\":\"Dialogs_messages__16nKR\",\"dialogContent\":\"Dialogs_dialogContent__1t2h6\",\"addMessage\":\"Dialogs_addMessage__1Thj2\"};","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateAppType} from \"../redux/store\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state: StateAppType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\ntype MapStatePropsType = ReturnType<typeof mapStateToPropsForRedirect>\r\n\r\nexport const withAuthRedirect = (Component: React.ComponentType) => {\r\n    class RedirectComponent extends React.Component<MapStatePropsType> {\r\n        render() {\r\n            if (!this.props.isAuth ) return <Redirect  to={\"/login\"}/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}\r\n\r\n\r\n\r\n\r\nexport default withAuthRedirect;","import React from \"react\";\r\n\r\ntype propsType = {\r\n    message: string\r\n}\r\nconst Message:React.FC<propsType> = (props) => <div>{props.message}</div>;\r\n\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"../Dialogs.module.css\";\r\n\r\ntype propsType = {\r\n    id:number\r\n    name:string\r\n}\r\nconst DialogItem:React.FC<propsType> = (props) => (\r\n  <div>\r\n    <NavLink to={`/dialogs/${props.id}`} activeClassName={classes.active}>\r\n      {props.name}\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default DialogItem;\r\n","import classes from \"./Dialogs.module.css\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../common/FormsControls/FormControls\";\r\nimport {required} from \"../../utilits/validators/validators\";\r\nimport {newMessageFormType} from \"./Dialogs\";\r\n\r\ntype propsType = {\r\n    onSubmit: (formData: newMessageFormType) => void\r\n}\r\nconst SendMessageForm:React.FC<InjectedFormProps<newMessageFormType, propsType> & propsType > = props =>{\r\n\r\n    return(\r\n        <form onSubmit={props.handleSubmit} className={classes.addMessage}>\r\n            <Field component ={Textarea} name =\"message\"\r\n                   placeholder =\"Write a message\"\r\n                   validate = {[required]}\r\n            />\r\n            <button>Send</button>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst rSendMessageForm = reduxForm<newMessageFormType, propsType>({\r\n    form:\"sendMessage\"\r\n})(SendMessageForm);\r\n\r\nexport default rSendMessageForm;","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./dialogsItem/DialogItem\";\r\nimport SendMessageForm from \"./SendMessageForm\";\r\nimport {dialogsInitType} from \"../../redux/dialogsReducer\";\r\n\r\ntype propsType = {\r\n    messagesPage: dialogsInitType\r\n    sendMessage: (message:string) => void\r\n}\r\n\r\nexport type newMessageFormType = {\r\n    message:string\r\n}\r\nconst Dialogs:React.FC<propsType> = (props) => {\r\n\r\n  let dialogItems = props.messagesPage.dialogsData.map((el) => (\r\n    <DialogItem name={el.name} id={el.id} key={el.id} />\r\n  ));\r\n\r\n  let messageItems = props.messagesPage.messagesData.map((el) => (\r\n    <Message message={el.message} key={el.id} />\r\n  ));\r\n\r\n  let sendMessage = (values:newMessageFormType) => {\r\n      props.sendMessage(values.message);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogItems}>{dialogItems}</div>\r\n      <div className={classes.dialogContent}>\r\n        <div className={classes.messages}>{messageItems}</div>\r\n\r\n          <SendMessageForm onSubmit = {sendMessage}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport {\r\n  action,\r\n} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport WithAuthRedirect from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {StateAppType} from \"../../redux/store\";\r\n\r\nlet mapStateToProps = (state:StateAppType) =>{\r\n  return {\r\n    messagesPage: state.messagesPage,\r\n  }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps,{\r\n      sendMessage:action.addMessageCreator\r\n    }),\r\n    WithAuthRedirect\r\n)(Dialogs);;\r\n"],"sourceRoot":""}
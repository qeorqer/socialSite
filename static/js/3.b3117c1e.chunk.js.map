{"version":3,"sources":["components/Profile/ProfileInfo/Profileinfo.module.css","components/Profile/posts/Posts.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileData.js","components/Profile/ProfileInfo/Profileinfo.js","components/Profile/posts/post/Post.js","components/Profile/posts/AddPostForm.js","components/Profile/posts/Posts.js","components/Profile/posts/PostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatus","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","classes","onChange","e","currentTarget","type","autoFocus","onClick","updateStatus","onDoubleClick","isOwner","ContactElement","contactTitle","contactValue","href","target","ProfileData","profile","profileData","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","keys","some","el","map","key","ProfileInfo","logo","src","photos","large","defaultLogo","alt","description","fullName","to","settings","xmlns","xmlnsXlink","style","margin","background","display","width","height","viewBox","transform","d","Post","message","likes","AddPostForm","addPost","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","reduxForm","form","Posts","React","memo","postItems","profilePage","postsData","id","postsBlock","values","post","posts","PostsContainer","connect","state","addPostCreator","Profile","content","Preloader","ProfileContainer","userId","this","match","params","history","getProfile","getStatus","updateProfile","prevProps","Component","compose","auth","getProfileThunkCreator","getStatusThunkCreator","updateStatusThunkCreator","withRouter"],"mappings":"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","file":"static/js/3.b3117c1e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"Profileinfo_ProfileInfo__2rKLf\",\"logo\":\"Profileinfo_logo__iGagM\",\"profileData\":\"Profileinfo_profileData__15MxO\",\"contacts\":\"Profileinfo_contacts__cIRgW\",\"status\":\"Profileinfo_status__2w7Qr\",\"settings\":\"Profileinfo_settings__1nDfT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"Posts_addPost__1nbsT\",\"posts\":\"Posts_posts__24Eqp\",\"postsBlock\":\"Posts_postsBlock__NOCs4\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useState, useEffect} from \"react\";\r\nimport classes from \"./Profileinfo.module.css\";\r\n\r\nconst ProfileStatus = props => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n    const editModeActive = () => {\r\n        setEditMode(true);\r\n    }\r\n    const editModeDeactivate = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    return (\r\n        <div className={classes.status}>\r\n            {editMode ?\r\n                <div><textarea onChange={onStatusChange} type=\"text\" value={status} autoFocus={true}/>\r\n                    <button onClick={editModeDeactivate}>Save</button>\r\n                </div> :\r\n                <p onDoubleClick={props.isOwner && editModeActive}>{props.status ? props.status : (props.isOwner ? \"Set your status\" : \"\")}</p>}\r\n        </div>\r\n\r\n    )\r\n\r\n};\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport classes from \"./Profileinfo.module.css\";\r\n\r\nlet ProfileData = ({profile}) =>  (\r\n        <>\r\n            <div className={classes.profileData}>\r\n                {\r\n                    profile.aboutMe &&\r\n                    <p><b>About me:</b> {profile.aboutMe}</p>\r\n                }\r\n                <p><b>Looking for a job:</b> {profile.lookingForAJob ? \"Yes\" : \"No\"}</p>\r\n                {profile.lookingForAJob &&\r\n                <p><b>What can I do:</b> {profile.lookingForAJobDescription}</p>\r\n                }\r\n\r\n            </div>\r\n            <div className={classes.contacts}>\r\n                {Object.keys(profile.contacts).some(el => profile.contacts[el]) &&\r\n                <h3>Contacts:</h3>\r\n            }\r\n                <ul>\r\n                    {Object.keys(profile.contacts).map(key => <ContactElement contactTitle={key} contactValue={profile.contacts[key]} key={key}/>)}\r\n                </ul>\r\n            </div>\r\n           </>\r\n\r\n    )\r\n\r\nconst ContactElement = ({contactTitle, contactValue}) => {\r\n    if (!contactValue) {\r\n        return \"\"\r\n    }\r\n    return <li><b>{contactTitle}</b>: <a href={contactValue} target=\"_blank\">{contactValue} </a></li>\r\n\r\n\r\n}\r\nexport default ProfileData;\r\n","import React from \"react\";\r\nimport classes from \"./Profileinfo.module.css\";\r\nimport defaultLogo from \"../../../firstUser/User_Cyber_Spy.png\"\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ProfileData from \"./ProfileData\";\r\n\r\nlet ProfileInfo = (props) => {\r\n\r\n    return (\r\n        <div className={classes.ProfileInfo}>\r\n            <div className={classes.logo}>\r\n\r\n                <img src={props.profile.photos.large ? props.profile.photos.large : defaultLogo} alt=\"\"/>\r\n            </div>\r\n            <div className={classes.description}>\r\n                <ProfileStatus status={props.status} isOwner={props.isOwner} updateStatus={props.updateStatus}/>\r\n                <h2>{props.profile.fullName}</h2>\r\n                <ProfileData profile = {props.profile} />\r\n            </div>\r\n\r\n\r\n\r\n            {\r\n                //show settings gear if my page\r\n                props.isOwner &&\r\n                <NavLink to=\"settings\" className={classes.settings}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                         style={{margin: \"auto\", background: \"transparent\", display: \"block\"}} width=\"30px\"\r\n                         height=\"30px\"\r\n                         viewBox=\"0 0 100 100\">\r\n                        <g transform=\"translate(50 50)\">\r\n                            <g>\r\n                                <path\r\n                                    d=\"M29.491524206117255 -5.5 L37.491524206117255 -5.5 L37.491524206117255 5.5 L29.491524206117255 5.5 A30 30 0 0 1 24.742744050198738 16.964569457146712 L24.742744050198738 16.964569457146712 L30.399598299691117 22.621423706639092 L22.621423706639096 30.399598299691114 L16.964569457146716 24.742744050198734 A30 30 0 0 1 5.5 29.491524206117255 L5.5 29.491524206117255 L5.5 37.491524206117255 L-5.499999999999997 37.491524206117255 L-5.499999999999997 29.491524206117255 A30 30 0 0 1 -16.964569457146705 24.742744050198738 L-16.964569457146705 24.742744050198738 L-22.621423706639085 30.399598299691117 L-30.399598299691117 22.621423706639092 L-24.742744050198738 16.964569457146712 A30 30 0 0 1 -29.491524206117255 5.500000000000009 L-29.491524206117255 5.500000000000009 L-37.491524206117255 5.50000000000001 L-37.491524206117255 -5.500000000000001 L-29.491524206117255 -5.500000000000002 A30 30 0 0 1 -24.742744050198738 -16.964569457146705 L-24.742744050198738 -16.964569457146705 L-30.399598299691117 -22.621423706639085 L-22.621423706639092 -30.399598299691117 L-16.964569457146712 -24.742744050198738 A30 30 0 0 1 -5.500000000000011 -29.491524206117255 L-5.500000000000011 -29.491524206117255 L-5.500000000000012 -37.491524206117255 L5.499999999999998 -37.491524206117255 L5.5 -29.491524206117255 A30 30 0 0 1 16.964569457146702 -24.74274405019874 L16.964569457146702 -24.74274405019874 L22.62142370663908 -30.39959829969112 L30.399598299691117 -22.6214237066391 L24.742744050198738 -16.964569457146716 A30 30 0 0 1 29.491524206117255 -5.500000000000013 M0 -20A20 20 0 1 0 0 20 A20 20 0 1 0 0 -20\"></path>\r\n                            </g>\r\n                        </g>\r\n                    </svg>\r\n                </NavLink>\r\n            }\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\n\r\nlet Post = (props) => (\r\n  <div>\r\n    {props.message}{\" \"}\r\n    <div>\r\n      <button>like</button>\r\n      <span> {props.likes}</span>\r\n    </div>\r\n  </div>\r\n);\r\nexport default Post;\r\n","import classes from \"./Posts.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormControls\";\r\nimport {required} from \"../../../utilits/validators/validators\";\r\nimport React from \"react\";\r\n\r\nlet AddPostForm = (props) =>(\r\n    <form className={classes.addPost} onSubmit={props.handleSubmit} >\r\n        <p>Add post</p>\r\n        <Field component={Textarea} name=\"post\" validate = {[required]}\r\n               placeholder =\"Write your thoughts\"\r\n        />\r\n        <button>Add new</button>\r\n    </form>\r\n)\r\nAddPostForm = reduxForm({form:\"addPost\"})(AddPostForm);\r\n\r\nexport default  AddPostForm;","import React from \"react\";\r\nimport Post from \"./post/Post\";\r\nimport classes from \"./Posts.module.css\";\r\nimport AddPostForm from \"./AddPostForm\";\r\n\r\nconst Posts = React.memo(props => {\r\n    let postItems = props.profilePage.postsData.map((el) => (\r\n        <Post message={el.message} likes={el.likes} id={el.id} key={el.id}/>\r\n    ));\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.post);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h2>my posts</h2>\r\n\r\n            <AddPostForm onSubmit={addPost}/>\r\n            <div className={classes.posts}>{postItems}</div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\nimport {\r\n  addPostCreator,\r\n} from \"../../../redux/profileReducer\";\r\nimport Posts from \"./Posts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profilePage: state.profilePage,\r\n  };\r\n};\r\nconst PostsContainer = connect(mapStateToProps, {\r\n  addPost:addPostCreator\r\n})(Posts);\r\nexport default PostsContainer;\r\n","import React from \"react\";\r\nimport classes from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/Profileinfo\";\r\nimport PostsContainer from \"./posts/PostsContainer\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\n\r\nlet Profile = (props) => {\r\n    if(!props.profile){\r\n        return <Preloader />\r\n    }\r\n    return(\r\n\r\n        <div className={classes.content}>\r\n\r\n            <ProfileInfo isOwner = {props.isOwner}profile={props.profile} status = {props.status} updateStatus = {props.updateStatus}/>\r\n            {\r\n                props.isOwner &&\r\n                <PostsContainer/>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfileThunkCreator,\r\n    getStatusThunkCreator,\r\n    updateStatusThunkCreator\r\n} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    updateProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.id;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.updateProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} isOwner={!this.props.match.params.userId} />\r\n        );\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        id: state.auth.id,\r\n    }\r\n)\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getProfile: getProfileThunkCreator,\r\n        getStatus: getStatusThunkCreator,\r\n        updateStatus: updateStatusThunkCreator\r\n    }),\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}
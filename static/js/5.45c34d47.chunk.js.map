{"version":3,"sources":["HOC/WithAuthRedirect.tsx","components/Settings/Settings.module.css","components/Settings/SetProfileForm.tsx","components/Settings/Settings.tsx","components/Settings/SettingsContainer.tsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","reduxForm","form","className","classes","setProfile","onSubmit","handleSubmit","mainSettings","Field","component","Input","name","type","placeholder","Textarea","checkbox","htmlFor","id","contacts","profile","Object","keys","map","key","btnHolder","error","Settings","settings","desc","setImage","onChange","e","target","files","length","setPhoto","SetProfileForm","data","saveProfile","initialValues","SettingsContainer","compose","profilePage","myProfile","setPhotoThunkCreator","saveProfileThunkCreator","WithAuthRedirect"],"mappings":"sLAMIA,EAA6B,SAACC,GAAD,MAA0B,CACvDC,OAAQD,EAAME,KAAKD,SAkBRE,IAdiB,SAACC,GAAoC,IAC3DC,EAD0D,uKAGxD,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OAFK,kBAAC,IAAD,CAAWC,GAAI,eAHS,GAChCC,IAAML,WAOtC,OAAOM,YAAQX,EAARW,CAAoCL,K,oBClB/CM,EAAOC,QAAU,CAAC,SAAW,2BAA2B,KAAO,uBAAuB,SAAW,2BAA2B,WAAa,6BAA6B,SAAW,2BAA2B,SAAW,2BAA2B,aAAe,+BAA+B,UAAY,8B,uJC+C7RC,cAAmC,CAACC,KAAM,cAA1CD,EAtCwE,SAACN,GAAD,OACnF,0BAAMQ,UAAWC,IAAQC,WAAYC,SAAUX,EAAMY,cACjD,yBAAKJ,UAAWC,IAAQI,cACpB,6BACI,wCACA,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAOC,KAAK,WAAWC,KAAK,OAAOC,YAAY,cAErE,6BACI,wCACA,kBAACL,EAAA,EAAD,CAAOC,UAAWK,IAAUH,KAAK,UAAUE,YAAY,aAE3D,yBAAKX,UAAWC,IAAQY,UACpB,2BAAOC,QAAQ,cAAa,kDAC5B,kBAACR,EAAA,EAAD,CAAOC,UAAWC,IAAOC,KAAK,iBAAiBM,GAAG,aAAaL,KAAK,cAExE,6BACI,2CACA,kBAACJ,EAAA,EAAD,CAAOC,UAAWK,IAAUH,KAAK,4BAA4BE,YAAY,+BAIjF,yBAAKX,UAAWC,IAAQe,UACnBxB,EAAMyB,SACPC,OAAOC,KAAK3B,EAAMyB,QAAQD,UAAUI,KAAI,SAACC,EAAKN,GAAN,OACpC,yBAAKM,IAAKN,GACN,2BAAIM,EAAJ,KACA,kBAACf,EAAA,EAAD,CAAOC,UAAWC,IAAOC,KAAI,mBAAcY,GAAOX,KAAK,OAAOC,YAAaU,SAIvF,yBAAKrB,UAAWC,IAAQqB,WACxB,gDACC9B,EAAM+B,OACP,2BAAI/B,EAAM+B,YCVHC,EAxBoB,SAAChC,GAShC,OACI,yBAAKQ,UAAWC,IAAQwB,UACpB,uBAAGzB,UAAWC,IAAQyB,MAAtB,wCACA,yBAAK1B,UAAWC,IAAQ0B,UACpB,sDACA,2BAAOjB,KAAK,OAAOK,GAAG,SAASa,SAb1B,SAACC,GAAqC,IAAD,GAClD,UAAGA,EAAEC,OAAOC,aAAZ,aAAG,EAAgBC,SACfxC,EAAMyC,SAAUJ,EAAEC,OAAOC,MAAM,OAY3B,2BAAOjB,QAAQ,UAAf,uBAGAtB,EAAMyB,SACN,kBAACiB,EAAD,CAAgB/B,SAbT,SAACgC,GAChB3C,EAAM4C,YAAYD,IAY+BlB,QAASzB,EAAMyB,QAASoB,cAAiB7C,EAAMyB,Y,iBCblGqB,E,uKAGE,OACI,kBAAC,EAAa/C,KAAKC,W,GAJCE,IAAML,WAavBkD,sBACX5C,aALkB,SAACV,GAAD,MAAyB,CAC3CgC,QAAQhC,EAAMuD,YAAYC,aAID,CACrBR,SAAUS,IACVN,YAAaO,MAEjBC,IALWL,CAMbD","file":"static/js/5.45c34d47.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateAppType} from \"../redux/store\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state: StateAppType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\ntype MapStatePropsType = ReturnType<typeof mapStateToPropsForRedirect>\r\n\r\nexport const withAuthRedirect = (Component: React.ComponentType) => {\r\n    class RedirectComponent extends React.Component<MapStatePropsType> {\r\n        render() {\r\n            if (!this.props.isAuth ) return <Redirect  to={\"/login\"}/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}\r\n\r\n\r\n\r\n\r\nexport default withAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__1H3pU\",\"desc\":\"Settings_desc__KrB58\",\"setImage\":\"Settings_setImage__1Lh6l\",\"setProfile\":\"Settings_setProfile__3dz-8\",\"checkbox\":\"Settings_checkbox__27KJ7\",\"contacts\":\"Settings_contacts__3m_02\",\"mainSettings\":\"Settings_mainSettings__178eN\",\"btnHolder\":\"Settings_btnHolder__A-0CC\"};","import {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../common/FormsControls/FormControls\";\r\nimport classes from \"./Settings.module.css\";\r\nimport React from \"react\";\r\nimport {profileType} from \"../../redux/types/types\";\r\n\r\ntype propsType = {\r\n    profile: profileType\r\n}\r\n\r\nlet setProfileForm: React.FC<InjectedFormProps<profileType, propsType> & propsType > = (props) => (\r\n    <form className={classes.setProfile} onSubmit={props.handleSubmit}>\r\n        <div className={classes.mainSettings}>\r\n            <div>\r\n                <p>Fullname:</p>\r\n                <Field component={Input} name=\"fullName\" type=\"text\" placeholder=\"Fullname\"/>\r\n            </div>\r\n            <div>\r\n                <p>About me:</p>\r\n                <Field component={Textarea} name=\"aboutMe\" placeholder=\"aboutMe\"/>\r\n            </div>\r\n            <div className={classes.checkbox}>\r\n                <label htmlFor=\"lookingJob\"><b>Looking for a job:</b></label>\r\n                <Field component={Input} name=\"lookingForAJob\" id=\"lookingJob\" type=\"checkbox\"/>\r\n            </div>\r\n            <div>\r\n                <p>Your skills:</p>\r\n                <Field component={Textarea} name=\"lookingForAJobDescription\" placeholder=\"Your professional skills\"/>\r\n            </div>\r\n\r\n        </div>\r\n        <div className={classes.contacts}>\r\n            {props.profile &&\r\n            Object.keys(props.profile.contacts).map((key, id) => (\r\n                <div key={id}>\r\n                    <p>{key}:</p>\r\n                    <Field component={Input} name={`contacts.${key}`} type=\"text\" placeholder={key}/>\r\n                </div>\r\n            ))}\r\n        </div>\r\n        <div className={classes.btnHolder}>\r\n        <button>Save changes</button>\r\n        {props.error &&\r\n        <p>{props.error}</p>\r\n        }\r\n        </div>\r\n    </form>\r\n);\r\nexport default reduxForm<profileType , propsType>({form: \"setProfile\"})(setProfileForm);\r\n","import React, {ChangeEvent} from \"react\";\r\nimport classes from \"./Settings.module.css\";\r\nimport SetProfileForm from \"./SetProfileForm\";\r\nimport {profileType} from \"../../redux/types/types\";\r\ntype propsType = {\r\n    setPhoto: (file:File) => void\r\n    saveProfile: (profile:profileType) => void\r\n    profile: profileType | null\r\n}\r\nlet Settings:React.FC<propsType> = (props) => {\r\n    const onSelect = (e:ChangeEvent<HTMLInputElement>) => {\r\n        if(e.target.files?.length){\r\n            props.setPhoto( e.target.files[0]);\r\n        }\r\n    }\r\n    const submitForm = (data:profileType) =>{\r\n        props.saveProfile(data);\r\n    }\r\n    return (\r\n        <div className={classes.settings}>\r\n            <p className={classes.desc}>Here you can set your profile's data</p>\r\n            <div className={classes.setImage}>\r\n                <p>Click to choose a file:</p>\r\n                <input type=\"file\" id=\"avatar\" onChange={onSelect}/>\r\n                <label htmlFor=\"avatar\">Select your avatar</label>\r\n            </div>\r\n            {\r\n                props.profile &&\r\n                <SetProfileForm onSubmit = {submitForm}  profile={props.profile} initialValues = {props.profile}/>\r\n            }\r\n        </div>\r\n    )\r\n};\r\nexport default Settings;\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport Settings from \"./Settings\";\r\nimport WithAuthRedirect from \"../../HOC/WithAuthRedirect\";\r\nimport {saveProfileThunkCreator, setPhotoThunkCreator} from \"../../redux/profileReducer\";\r\nimport {StateAppType} from \"../../redux/store\";\r\nimport {profileType} from \"../../redux/types/types\";\r\n\r\ntype mapStateToPropsType = ReturnType<typeof mapStateToProps>\r\ntype mapDispatchToPropsType = {\r\n    setPhoto: (file:File) => void\r\n    saveProfile: (profile:profileType) => void\r\n}\r\ntype propsType = mapStateToPropsType & mapDispatchToPropsType;\r\nclass SettingsContainer extends React.Component<propsType> {\r\n    render() {\r\n\r\n        return (\r\n            <Settings {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state:StateAppType) => ({\r\n    profile:state.profilePage.myProfile\r\n    }\r\n)\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        setPhoto: setPhotoThunkCreator,\r\n        saveProfile: saveProfileThunkCreator\r\n    }),\r\n    WithAuthRedirect\r\n)(SettingsContainer);\r\n"],"sourceRoot":""}
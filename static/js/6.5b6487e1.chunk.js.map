{"version":3,"sources":["components/common/FormsControls/formControls.module.css","components/common/FormsControls/FormControls.js","utilits/validators/validators.js","components/login/LoginForm.js","components/login/Login.js"],"names":["module","exports","FormControl","input","meta","props","hasError","error","touched","className","classes","formControl","children","Textarea","Input","required","value","LoginForm","handleSubmit","submitting","onSubmit","Field","component","name","type","placeholder","validate","id","htmlFor","formSummaryError","disabled","reduxForm","form","connect","state","isAuth","auth","logIn","logInThunkCreator","to","formData","email","password","rememberMe"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,oJCEnHC,EAAc,SAAC,GAA4B,EAA3BC,MAA4B,IAArBC,EAAoB,EAApBA,KAASC,EAAW,gCACvCC,EAAWF,EAAKG,OAASH,EAAKI,QACpC,OAEI,yBAAKC,UAAWC,IAAQC,YAAc,KAAOL,EAAWI,IAAQH,MAAQ,KACnEF,EAAMO,SAELN,GAAY,8BAAOF,EAAKG,SAKzBM,EAAW,SAACR,GAAD,OACpB,kBAACH,EAAgBG,EAAO,8CAAcA,EAAMF,MAAWE,IAAvD,MAESS,EAAQ,SAACT,GAAD,OACjB,kBAACH,EAAgBG,EAAO,2CAAWA,EAAMF,MAAWE,IAApD,O,iCCnBJ,kCAAO,IAAMU,EAAW,SAAAC,GACpB,OAAGA,OACC,EAGG,0B,wJCCPC,EAAY,YAAsC,IAApCC,EAAmC,EAAnCA,aAAaX,EAAsB,EAAtBA,MAAMY,EAAgB,EAAhBA,WAEjC,OACA,0BAAMC,SAAUF,GACZ,yBAAKT,UAAU,eACX,kBAACY,EAAA,EAAD,CAAOC,UAAWR,IAAOS,KAAK,QAAQC,KAAK,OAAOC,YAAY,QAAQC,SAAU,CAACX,OACjF,kBAACM,EAAA,EAAD,CAAOC,UAAWR,IAAOS,KAAK,WAAWC,KAAK,WAAWC,YAAY,WAAWC,SAAU,CAACX,QAE/F,yBAAKN,UAAU,iBACX,kBAACY,EAAA,EAAD,CAAOC,UAAWR,IAAOU,KAAK,WAAWD,KAAK,aAAaI,GAAG,cAAcX,OAAO,IACnF,2BAAOY,QAAQ,eAAf,cACCrB,GACD,yBAAKE,UAAWC,IAAQmB,kBACnBtB,GAGL,yBAAKE,UAAU,kBACf,4BAAQqB,SAAUX,GAAlB,cASGF,EAJfA,EAAYc,YAAU,CAClBC,KAAM,SADED,CAETd,G,cCeYgB,uBALO,SAACC,GAAD,MAClB,CACAC,OAAQD,EAAME,KAAKD,UAGgB,CACnCE,MAAOC,KADIL,EAtCD,SAAC,GAAoB,IAAnBI,EAAkB,EAAlBA,MAmBZ,OAnB8B,EAAZF,OAoBN,kBAAC,IAAD,CAAUI,GAAG,aAGrB,yBAAK9B,UAAU,aACX,qCACA,kBAAC,EAAD,CAAWW,SATF,SAAAoB,GACbH,EAAMG,EAASC,MAAMD,EAASE,SAASF,EAASG,eAU5C,+BA1BC","file":"static/js/6.5b6487e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formControls_formControl__2y1jI\",\"error\":\"formControls_error__aKERt\",\"formSummaryError\":\"formControls_formSummaryError__1IXR4\"};","import React from \"react\";\r\nimport classes from \"./formControls.module.css\"\r\n\r\nconst FormControl = ({input, meta, ...props}) => {\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n            {props.children}\r\n\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => (\r\n    <FormControl {...props}><textarea {...props.input} {...props}/> </FormControl>\r\n)\r\nexport const Input = (props) => (\r\n    <FormControl {...props}><input {...props.input} {...props}/> </FormControl>\r\n)","export const required = value => {\r\n    if(value){\r\n        return undefined\r\n    }\r\n    else{\r\n    return \"The field is required\"\r\n    }\r\n}","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Input} from \"../common/FormsControls/FormControls\";\r\nimport {required} from \"../../utilits/validators/validators\";\r\nimport classes from '../common/FormsControls/formControls.module.css';\r\n\r\nlet LoginForm = ({handleSubmit,error,submitting}) => {\r\n\r\n    return(\r\n    <form onSubmit={handleSubmit}>\r\n        <div className=\"loginInputs\">\r\n            <Field component={Input} name=\"email\" type=\"text\" placeholder=\"login\" validate={[required]}/>\r\n            <Field component={Input} name=\"password\" type=\"password\" placeholder=\"password\" validate={[required]}/>\r\n        </div>\r\n        <div className=\"loginCheckbox\">\r\n            <Field component={Input} type=\"checkbox\" name=\"rememberMe\" id=\"checkbox_id\" value={false}/>\r\n            <label htmlFor=\"checkbox_id\">Remeber me</label>\r\n            {error &&\r\n            <div className={classes.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div className=\"loginBtnHolder\">\r\n            <button disabled={submitting}> login</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n)}\r\nLoginForm = reduxForm({\r\n    form: \"login\"\r\n})(LoginForm);\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport {logInThunkCreator} from \"../../redux/authReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport './login.css';\r\n\r\nconst Login = ({logIn,isAuth}) => {\r\n    let style = `\r\n    .inner {\r\n  grid-template-areas: \r\n  \"hdr hdr\"\r\n  \"cnt cnt\";\r\n  grid-template-rows: 120px 1fr;\r\n  grid-template-columns: 1fr 5fr;\r\n  grid-gap: 10px;\r\n  max-width: 1200px;\r\n    margin: 0 auto;\r\n}\r\nnav{\r\ndisplay:none\r\n}\r\n   `\r\n    const onSubmit = formData => {\r\n        logIn(formData.email,formData.password,formData.rememberMe);\r\n    }\r\n    if(isAuth){\r\n        return  <Redirect to='/profile'/>\r\n    }\r\n    return (\r\n        <div className=\"loginPage\">\r\n            <h1>Login</h1>\r\n            <LoginForm onSubmit ={onSubmit} />\r\n\r\n            <style>\r\n                {style}\r\n            </style>\r\n        </div>\r\n    )\r\n}\r\nlet mapStateToProps = (state) => (\r\n    {\r\n    isAuth: state.auth.isAuth\r\n    }\r\n)\r\nexport default connect(mapStateToProps,{\r\n    logIn: logInThunkCreator\r\n})(Login);"],"sourceRoot":""}